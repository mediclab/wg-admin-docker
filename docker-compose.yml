version: '3.9'

services:
  app:
    image: medic84/wg-admin:latest
    container_name: app
    command: "--host=0.0.0.0 --rpc-port=6001 --port=80"
    restart: unless-stopped
    volumes:
      - ./.env:/var/www/html/.env
      - ./app/logs:/var/www/html/storage/logs
      - ./app/configs:/etc/wireguard
    ports:
      - "${WG_ALLOWED_PORTS:-51800-51850}:${WG_ALLOWED_PORTS:-51800-51850}/udp"
      - "${PANEL_HTTP_PORT:-8080}:80"
      - "${PANEL_HTTPS_PORT:-8443}:443"
    networks:
      - wg-admin
    cap_add:
        - NET_ADMIN
        - SYS_MODULE
    sysctls:
        - net.ipv4.ip_forward=1
        - net.ipv4.conf.all.src_valid_mark=1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:14-alpine
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_DATABASE}" ]
      interval: 2s
      timeout: 2s
      retries: 5
    networks:
      - wg-admin

  redis:
    image: redis:7.0-alpine3.17
    container_name: redis
    volumes:
      - rddata:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 2s
      retries: 5
    networks:
      - wg-admin

networks:
  wg-admin:
    driver: bridge

volumes:
  dbdata:
    driver: local
  rddata:
    driver: local
